{"ast":null,"code":"import _slicedToArray from\"/home/rishabh/html/phonebook/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import Filter from'./components/Filter';import PersonForm from'./components/PersonForm';import Persons from'./components/Persons';import apiService from'./services/helper';import ReactNotification from'react-notifications-component';import toast from'./services/notifications';var App=function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),persons=_useState2[0],setPersons=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),newName=_useState4[0],setNewName=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),newNumber=_useState6[0],setNewNum=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),filterName=_useState8[0],setFilterName=_useState8[1];useEffect(function(){apiService.getAll().then(function(returnedPerson){setPersons(returnedPerson);});},[]);var handleChangeName=function handleChangeName(e){setNewName(e.target.value);};var handleChangeNum=function handleChangeNum(e){setNewNum(e.target.value);};var handleFilter=function handleFilter(e){setFilterName(e.target.value);};var filteredPersons=filterName===''?persons:persons&&persons.filter(function(person){return person.name.toLowerCase().includes(filterName.toLowerCase());});// polyfill for sorting on name\n// const compare = (a, b) => {\n//   const nameA = a.name.toUpperCase();\n//   const nameB = b.name.toUpperCase();\n//   let comparison = 0;\n//   if (nameA > nameB) {\n//     comparison = 1;\n//   } else if (nameA < nameB) {\n//     comparison = -1;\n//   }\n//   return comparison;\n// }\n// polyfill for startcase string\nvar titleCase=function titleCase(str){return str.toLowerCase().split(' ').map(function(word){return word.replace(word[0],word[0].toUpperCase());}).join(' ');};//\nvar addPerson=function addPerson(e){e.preventDefault();var personObject={name:titleCase(newName),number:newNumber};apiService.create(personObject).then(function(returnedPerson){setPersons(persons.concat(returnedPerson));toast.successfullAdd(personObject.name);setNewName('');setNewNum('');}).catch(function(error){var msg=Object.entries(error.response.data.errors);var errmsg=msg[0][1].message;toast.unique(errmsg);});};var deletePerson=function deletePerson(details){if(window.confirm(\"Delete \".concat(details.name,\" ?\"))){apiService.remove(details.id).then(function(returnedPerson){setPersons(persons.map(function(person){return person.id!==details.id?person:returnedPerson;}).filter(function(person){return Object.keys(person).length!==0;}));});toast.successfullDeleted(details.name);}};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ReactNotification,null),/*#__PURE__*/React.createElement(\"section\",null,/*#__PURE__*/React.createElement(\"h2\",null,\"Phonebook~\"),/*#__PURE__*/React.createElement(Filter,{filterName:filterName,handleFilter:handleFilter}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"h2\",null,\"Add a new contact~\"),/*#__PURE__*/React.createElement(PersonForm,{addPerson:addPerson,newName:newName,newNumber:newNumber,handleChangeName:handleChangeName,handleChangeNum:handleChangeNum}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"h2\",null,\"Names~\"),/*#__PURE__*/React.createElement(Persons,{filteredPersons:filteredPersons,deletePerson:deletePerson})));};export default App;","map":{"version":3,"sources":["/home/rishabh/html/phonebook/client/src/App.js"],"names":["React","useState","useEffect","Filter","PersonForm","Persons","apiService","ReactNotification","toast","App","persons","setPersons","newName","setNewName","newNumber","setNewNum","filterName","setFilterName","getAll","then","returnedPerson","handleChangeName","e","target","value","handleChangeNum","handleFilter","filteredPersons","filter","person","name","toLowerCase","includes","titleCase","str","split","map","word","replace","toUpperCase","join","addPerson","preventDefault","personObject","number","create","concat","successfullAdd","catch","error","msg","Object","entries","response","data","errors","errmsg","message","unique","deletePerson","details","window","confirm","remove","id","keys","length","successfullDeleted"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport apiService from './services/helper'\nimport ReactNotification from 'react-notifications-component'\nimport toast from './services/notifications'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNum ] = useState('')\n  const [ filterName, setFilterName ] = useState('')\n  \n\n  useEffect(() => {\n    apiService\n      .getAll()\n      .then(returnedPerson => {\n        setPersons(returnedPerson)\n      })\n    }, [])\n  \n  const handleChangeName = (e) => {\n    setNewName(e.target.value)\n  }\n\n  const handleChangeNum = (e) => {\n    setNewNum(e.target.value)\n  }\n\n  const handleFilter = e => {\n    setFilterName(e.target.value)\n  }\n  const filteredPersons = filterName === '' ? persons : persons && persons.filter(person => (person.name.toLowerCase()).includes(filterName.toLowerCase()));\n  // polyfill for sorting on name\n  // const compare = (a, b) => {\n  //   const nameA = a.name.toUpperCase();\n  //   const nameB = b.name.toUpperCase();\n\n  //   let comparison = 0;\n  //   if (nameA > nameB) {\n  //     comparison = 1;\n  //   } else if (nameA < nameB) {\n  //     comparison = -1;\n  //   }\n  //   return comparison;\n  // }\n  // polyfill for startcase string\n  const titleCase = (str) => {\n    return str.toLowerCase().split(' ').map(function(word) {\n      return word.replace(word[0], word[0].toUpperCase());\n    }).join(' ');\n  }\n  //\n  const addPerson = e => {\n    e.preventDefault();\n    const personObject = {\n      name: titleCase(newName),\n      number: newNumber,  \n    }\n    apiService\n      .create(personObject)\n      .then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson))\n        toast.successfullAdd(personObject.name)\n        setNewName('')\n        setNewNum('')\n      })\n      .catch(error => {\n        let msg = Object.entries(error.response.data.errors)\n        let errmsg = msg[0][1].message\n        toast.unique(errmsg)\n      })\n    \n  }\n  \n  const deletePerson = (details) => {\n    if(window.confirm(`Delete ${details.name} ?`)){\n      apiService\n      .remove(details.id)\n      .then(returnedPerson => {\n        setPersons( persons.map(person => person.id !== details.id ? person : returnedPerson).filter(person => Object.keys(person).length!==0))\n      })\n      toast.successfullDeleted(details.name)\n    }\n  }\n\n  return (\n      <>\n      <ReactNotification />\n      <section>\n        <h2>Phonebook~</h2>\n        <Filter filterName={filterName} handleFilter={handleFilter} />\n        {/* <button onClick={() => filteredPersons.sort(compare)}>sort</button> */}\n        <br/>\n        <h2>Add a new contact~</h2>\n        <PersonForm \n          addPerson={addPerson} \n          newName={newName} \n          newNumber={newNumber} \n          handleChangeName={handleChangeName} \n          handleChangeNum={handleChangeNum} \n        />\n        <br/>\n        <h2>Names~</h2>\n        <Persons filteredPersons={filteredPersons} deletePerson={deletePerson} />\n      </section>\n      </>\n  )\n}\nexport default App"]},"metadata":{},"sourceType":"module"}