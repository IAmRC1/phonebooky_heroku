{"ast":null,"code":"var _jsxFileName = \"/home/rishabh/html/phonebook/client/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Filter from './components/Filter';\nimport PersonForm from './components/PersonForm';\nimport Persons from './components/Persons';\nimport apiService from './services/helper';\nimport ReactNotification from 'react-notifications-component';\nimport toast from './services/notifications';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNum] = useState('');\n  const [filterName, setFilterName] = useState('');\n  useEffect(() => {\n    apiService.getAll().then(returnedPerson => {\n      setPersons(returnedPerson);\n    });\n  }, []);\n\n  const handleChangeName = e => {\n    setNewName(e.target.value);\n  };\n\n  const handleChangeNum = e => {\n    setNewNum(e.target.value);\n  };\n\n  const handleFilter = e => {\n    setFilterName(e.target.value);\n  };\n\n  const filteredPersons = filterName === '' ? persons : persons && persons.filter(person => person.name.toLowerCase().includes(filterName.toLowerCase())); // polyfill for sorting on name\n  // const compare = (a, b) => {\n  //   const nameA = a.name.toUpperCase();\n  //   const nameB = b.name.toUpperCase();\n  //   let comparison = 0;\n  //   if (nameA > nameB) {\n  //     comparison = 1;\n  //   } else if (nameA < nameB) {\n  //     comparison = -1;\n  //   }\n  //   return comparison;\n  // }\n  // polyfill for startcase string\n\n  const titleCase = str => {\n    return str.toLowerCase().split(' ').map(function (word) {\n      return word.replace(word[0], word[0].toUpperCase());\n    }).join(' ');\n  }; //\n\n\n  const addPerson = e => {\n    e.preventDefault();\n    const personObject = {\n      name: titleCase(newName),\n      number: newNumber\n    };\n    apiService.create(personObject).then(returnedPerson => {\n      setPersons(persons.concat(returnedPerson));\n      toast.successfullAdd(personObject.name);\n      setNewName('');\n      setNewNum('');\n    }).catch(error => {\n      let msg = Object.entries(error.response.data.errors);\n      console.log('msg', msg); // let errmsg = msg[0][1].message\n      // toast.unique(errmsg)\n    });\n  };\n\n  const deletePerson = details => {\n    if (window.confirm(`Delete ${details.name} ?`)) {\n      apiService.remove(details.id).then(returnedPerson => {\n        setPersons(persons.map(person => person.id !== details.id ? person : returnedPerson).filter(person => Object.keys(person).length !== 0));\n      });\n      toast.successfullDeleted(details.name);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ReactNotification, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, \"Phonebook~\"), /*#__PURE__*/React.createElement(Filter, {\n    filterName: filterName,\n    handleFilter: handleFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, \"Add a new contact~\"), /*#__PURE__*/React.createElement(PersonForm, {\n    addPerson: addPerson,\n    newName: newName,\n    newNumber: newNumber,\n    handleChangeName: handleChangeName,\n    handleChangeNum: handleChangeNum,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, \"Names~\"), /*#__PURE__*/React.createElement(Persons, {\n    filteredPersons: filteredPersons,\n    deletePerson: deletePerson,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/rishabh/html/phonebook/client/src/App.js"],"names":["React","useState","useEffect","Filter","PersonForm","Persons","apiService","ReactNotification","toast","App","persons","setPersons","newName","setNewName","newNumber","setNewNum","filterName","setFilterName","getAll","then","returnedPerson","handleChangeName","e","target","value","handleChangeNum","handleFilter","filteredPersons","filter","person","name","toLowerCase","includes","titleCase","str","split","map","word","replace","toUpperCase","join","addPerson","preventDefault","personObject","number","create","concat","successfullAdd","catch","error","msg","Object","entries","response","data","errors","console","log","deletePerson","details","window","confirm","remove","id","keys","length","successfullDeleted"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport apiService from './services/helper'\nimport ReactNotification from 'react-notifications-component'\nimport toast from './services/notifications'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNum ] = useState('')\n  const [ filterName, setFilterName ] = useState('')\n  \n\n  useEffect(() => {\n    apiService\n      .getAll()\n      .then(returnedPerson => {\n        setPersons(returnedPerson)\n      })\n    }, [])\n  \n  const handleChangeName = (e) => {\n    setNewName(e.target.value)\n  }\n\n  const handleChangeNum = (e) => {\n    setNewNum(e.target.value)\n  }\n\n  const handleFilter = e => {\n    setFilterName(e.target.value)\n  }\n  const filteredPersons = filterName === '' ? persons : persons && persons.filter(person => (person.name.toLowerCase()).includes(filterName.toLowerCase()));\n  // polyfill for sorting on name\n  // const compare = (a, b) => {\n  //   const nameA = a.name.toUpperCase();\n  //   const nameB = b.name.toUpperCase();\n\n  //   let comparison = 0;\n  //   if (nameA > nameB) {\n  //     comparison = 1;\n  //   } else if (nameA < nameB) {\n  //     comparison = -1;\n  //   }\n  //   return comparison;\n  // }\n  // polyfill for startcase string\n  const titleCase = (str) => {\n    return str.toLowerCase().split(' ').map(function(word) {\n      return word.replace(word[0], word[0].toUpperCase());\n    }).join(' ');\n  }\n  //\n  const addPerson = e => {\n    e.preventDefault();\n    const personObject = {\n      name: titleCase(newName),\n      number: newNumber,  \n    }\n    apiService\n      .create(personObject)\n      .then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson))\n        toast.successfullAdd(personObject.name)\n        setNewName('')\n        setNewNum('')\n      })\n      .catch(error => {\n        let msg = Object.entries(error.response.data.errors)\n        console.log('msg', msg)\n        // let errmsg = msg[0][1].message\n        // toast.unique(errmsg)\n      })\n    \n  }\n  \n  const deletePerson = (details) => {\n    if(window.confirm(`Delete ${details.name} ?`)){\n      apiService\n      .remove(details.id)\n      .then(returnedPerson => {\n        setPersons( persons.map(person => person.id !== details.id ? person : returnedPerson).filter(person => Object.keys(person).length!==0))\n      })\n      toast.successfullDeleted(details.name)\n    }\n  }\n\n  return (\n      <>\n      <ReactNotification />\n      <section>\n        <h2>Phonebook~</h2>\n        <Filter filterName={filterName} handleFilter={handleFilter} />\n        {/* <button onClick={() => filteredPersons.sort(compare)}>sort</button> */}\n        <br/>\n        <h2>Add a new contact~</h2>\n        <PersonForm \n          addPerson={addPerson} \n          newName={newName} \n          newNumber={newNumber} \n          handleChangeName={handleChangeName} \n          handleChangeNum={handleChangeNum} \n        />\n        <br/>\n        <h2>Names~</h2>\n        <Persons filteredPersons={filteredPersons} deletePerson={deletePerson} />\n      </section>\n      </>\n  )\n}\nexport default App"]},"metadata":{},"sourceType":"module"}